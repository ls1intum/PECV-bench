diff -ruN a/problem-statement.md b/problem-statement.md
--- a/problem-statement.md	2025-07-25 14:28:42
+++ b/problem-statement.md	2025-07-25 20:03:58
@@ -17,7 +17,7 @@
 <color:testsColor(testMethods[Farm])>- animals: List<Animal></color>
 <color:testsColor(testMethods[Farm])>+ addAnimal(animal: Animal):void</color>
 <color:testsColor(testMethods[Farm])>- singFarmSongVerse(animal: Animal):void</color>
-<color:testsColor(testMethods[Farm])>+ singFarmSong():void</color>
+<color:testsColor(testMethods[Farm])>+ printFarmSong():void</color>
 <color:testsColor(testMethods[Farm])>+ feedAllAnimals():void</color>
 }
 }
@@ -110,7 +110,7 @@
     - `feedAllAnimals()` calls `messageOnFeed()` on all animals in the Farm, printing out the message for each animal.
 
 2. [task][Play the Song](testMethods[Farm],executeSongMethod(IOTester)) 
-    Implement the method `singFarmSong()` inside `Farm.java`, which prints the **Old MacDonald had a Farm** song. Your song must be printed correctly for a farm with any number of animals. The song consists of multiple verses, where each verse is sung by one Animal. A verse looks like this:
+    Implement the method `printFarmSong()` inside `Farm.java`, which prints the **Old MacDonald had a Farm** song. Your song must be printed correctly for a farm with any number of animals. The song consists of multiple verses, where each verse is sung by one Animal. A verse looks like this:
     Hint: Use animal.getClass().getSimpleName() to get the class name of the animal 
 
 ```
