diff -ruN a/problem-statement.md b/problem-statement.md
--- a/problem-statement.md	2025-07-11 10:16:28
+++ b/problem-statement.md	2025-07-23 11:47:27
@@ -49,7 +49,7 @@
 }
 
 interface Milkable <<interface>> #text:testsColor(testClass[Milkable]){
-<color:testsColor(testMethods[Milkable])>{abstract} messageOnMilk():String</color>
+<color:testsColor(testMethods[Milkable])>{abstract} messageOnMilk():boolean</color>
 }
  }
 
@@ -90,7 +90,7 @@
 ### Part 2
 
 Now, in our classes Goat, Seal, and Pig, you have to implement the interfaces as shown in the UML diagram and implement the methods.
-- The method `messageOnMilk()` should return <code class="string">"[Animal Type] [name] is milked"</code>
+- The method `messageOnMilk()` should return true if milking was successful, false otherwise
 - The method `messageOnRide()` should return <code class= "string"> "Riding on [Animal Type] [name]" </code>
 
 1. [task][Implement the Seal class](testClass[Seal],testConstructors[Seal],testMethods[Seal],feedSealTest(),milkSealTest(),rideSealTest())
