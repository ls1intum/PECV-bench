diff -ruN a/problem-statement.md b/problem-statement.md
--- a/problem-statement.md	2025-07-27 20:25:49
+++ b/problem-statement.md	2025-07-27 20:44:32
@@ -30,7 +30,7 @@
 <color:testsColor(testMethods[SealSaloon])>+acceptSupplyDelivery(String, int, int): void</color>
 <color:testsColor(testMethods[SealSaloon])>+orderMeal(Meal): void</color>
 <color:testsColor(testMethods[SealSaloon])>+checkOrderReady(): void</color>
-<color:testsColor(testMethods[SealSaloon])>+calculateRemainingOrderNumber(): void</color>
+<color:testsColor(testMethods[SealSaloon])>+calculateRemainingOrderNumber(): int</color>
 }
 
 class Meal {
@@ -97,7 +97,7 @@
 In this case, exit the method. When another customer places an order, `checkOrderReady()` gets called again and tries to serve the orders.
 Remember to remove successful orders from the queue.
 
-Additionally, implement a method `calculateRemainingOrderNumber()` because seal chefs want to know how long they are going to work. This method should use a **do-while loop** to print the remaining order number. In any case, you should print `Order number: 0`. And after that you should keep printing `Order number: 1`,`Order number: 2` until `Order number: n` where n is the remaining order number.
+Additionally, implement a method `calculateRemainingOrderNumber()` that returns the number of remaining orders as an integer because seal chefs want to know how long they are going to work.
 e.g.:
 ```txt
 Order number: 0
