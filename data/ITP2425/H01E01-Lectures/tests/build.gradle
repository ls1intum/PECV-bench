plugins {
    id 'com.teamscale' version '30.1.1'
}

apply plugin: 'java'
sourceCompatibility = 17
version = '1.0.0'
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
    mavenLocal()
}

// TODO: change back

dependencies {
    testImplementation 'de.tum.in.ase:artemis-java-test-sandbox:1.13.0'
    implementation 'org.apache.commons:commons-lang3:3.13.0'

//     testImplementation(':H01E02---Programming-Lecture')
//     testImplementation(':H01E02---Programming-Lecture-Solution')
}

def assignmentSrcDir = "assignment/src"
//def assignmentSrcDir = "../itp2324testh01e02new-solution"
def studentOutputDir = sourceSets.main.java.destinationDirectory.get()

sourceSets {
    test {
        java {
            srcDir 'test'
        }
        resources {
            srcDir 'test'
        }
    }


    main {
        java {
            srcDirs = [assignmentSrcDir]
        }
        resources {
            srcDirs = []
        }
    }
}

def forbiddenPackageFolders = [ //(2)
                                "$studentOutputDir/ch/qos/logback/",
                                "$studentOutputDir/com/github/javaparser/",
                                "$studentOutputDir/com/intellij/",
                                "$studentOutputDir/com/sun/",
                                "$studentOutputDir/de/tum/in/test/api/",
                                "$studentOutputDir/java/",
                                "$studentOutputDir/javax/",
                                "$studentOutputDir/jdk/",
                                "$studentOutputDir/net/jqwik/",
                                "$studentOutputDir/org/assertj/",
                                "$studentOutputDir/org/apache/",
                                "$studentOutputDir/org/eclipse/",
                                "$studentOutputDir/org/gradle/",
                                "$studentOutputDir/org/jacoco/",
                                "$studentOutputDir/org/json/",
                                "$studentOutputDir/org/junit/",
                                "$studentOutputDir/org/opentest4j/",
                                "$studentOutputDir/sun/",
                                "$studentOutputDir/worker/org/gradle/"
                                ,"$studentOutputDir/com/teamscale/",
                                "$studentOutputDir/okhttp3/",
                                "$studentOutputDir/retrofit2/",
                                "$studentOutputDir/shadow/",
                                "$studentOutputDir/com/squareup/",
                                "$studentOutputDir/okio/"
]
test {
    doFirst { //(1)
        for (String packageFolder in forbiddenPackageFolders) {
            assert !file(packageFolder).exists(): "$packageFolder must not exist within the submission."
        }
    }
    defaultCharacterEncoding = 'UTF-8'
    testLogging.showStandardStreams = true
    useJUnitPlatform()
}




tasks.register('tiaTests', com.teamscale.TestImpacted) {
    systemProperty "ares.security.trustedpackages", "okhttp3,com.teamscale,retrofit2,shadow,com.squareup,okio"
    useJUnitPlatform()
    filter {
        excludeTestsMatching "AttributeTest"
        excludeTestsMatching "ConstructorTest"
        excludeTestsMatching "ClassTest"
        excludeTestsMatching "MethodTest"
    }
    jacoco {
        includes = ["de.tum.cit.ase.*"]
    }
}
